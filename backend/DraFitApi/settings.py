"""
Django settings for DraFitApi project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
import environ
from decouple import config
import json
 


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SETTINGS_DIR = Path(__file__).resolve().parent # Ruta a la carpeta de settings
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--qa@pse&@%67v(-135v)skwd_*d)v4r6+u9=r2u49&g8_ng)k)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []



# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'anymail',
    'drf_spectacular',
    'django_flatpickr',
    'core',
    'patient',
    'diet',
    'booking',
    'doctor',
    'email_integration',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",  # Permitir solicitudes desde tu frontend (React)
    "http://127.0.0.1:5173",
    "http://localhost:3000"
]


ROOT_URLCONF = 'DraFitApi.urls' 

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DraFitApi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    
    #FORMA CON VARIABLE DE ENTORNO USANDO  ENV.DB

    'default': env.db('DJANGO_DB_URL')
    
    
    # ESTA ES LA FORMA POR DEFECTO
    
   # 'default': {
       # 'ENGINE': 'django.db.backends.postgresql',
       # 'NAME': 'DraFitDB',
        #'HOST': 'localhost',
        #'PORT': '5432',
        #'USER': 'postgres',
        #'PASSWORD': '12345678'
   # }
    
    
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

#LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

#USE_I18N = True

#USE_TZ = True

# settings.py
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/Santo_Domingo'  # Cambia a tu zona horaria
USE_I18N = True
USE_TZ = True  # Mantén esto en True para usar zonas horarias
CELERY_TIMEZONE = 'America/Santo_Domingo'  # Zona horaria de Celery


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = '/app/staticfiles/'


# Media files (files and images)


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#Microsoft translator apikey
TRANSLATOR_API_KEY = config('API_KEY_TRANSLATOR', default=None)


#whatsapp apikey
API_WHATSAPP_ACCESS_TOKEN = config('WHATSAPP_ACCESS_TOKEN', default=None )
API_WHATSAPP_PHONE_ID = config('WHATSAPP_PHONE_ID', default=None )



#OPENAI APIKEY
API_KEY_OPENAI = config("OPENAI_API_KEY", default=None)


def json_config(file_path):
    """Función para cargar la configuración desde un archivo JSON."""
    try:
        with open(file_path, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"Advertencia: No se encontró el archivo de configuración JSON en: {file_path}")
        return {}
    except json.JSONDecodeError as e:
        print(f"Error al decodificar el archivo JSON en: {file_path}. Error: {e}")
        return {}

JAZZMIN_SETTINGS = config(
    'JAZZMIN_SETTINGS_FILE',
    default=str(SETTINGS_DIR / 'jazzmin_settings.json'),
    cast=json_config
)








REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}


# CELERY CONFIG
#CELERY_BROKER_URL = 'redis://localhost:6379/0'
#CELERY_BROKER_URL = 'redis://redis:6379/0'
#CELERY_BROKER_URL = 'redis://host.docker.internal:6379/0'
CELERY_BROKER_URL = 'redis://host.docker.internal:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
#CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
#CELERY_RESULT_BACKEND = 'redis://host.docker.internal:6379/0'

CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'






# Configuración de SMTP para usar la contraseña de aplicación
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Backend por defecto de Django
EMAIL_HOST = 'smtp.gmail.com'  # Host SMTP de Gmail
EMAIL_PORT = 587  # Puerto para TLS
EMAIL_USE_TLS = True  # Activar TLS para una conexión segura
EMAIL_HOST_USER = 'inghendrickrafael@gmail.com'  # Tu dirección de Gmail
EMAIL_HOST_PASSWORD = 'bzbufztlfsozfslx'  # Reemplaza con la contraseña de aplicación generada
DEFAULT_FROM_EMAIL = 'inghendrickrafael@gmail.com'  # Correo del remitente


#Calendar Credentials

GOOGLE_CALENDAR_CREDENTIALS = os.path.join(BASE_DIR, 'calendar_credentials.json')
GOOGLE_CALENDAR_SCOPES = ['https://www.googleapis.com/auth/calendar']


